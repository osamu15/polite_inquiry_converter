// Code generated by MockGen. DO NOT EDIT.
// Source: create_jira_issue/main.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJiraIssueCreator is a mock of JiraIssueCreator interface.
type MockJiraIssueCreator struct {
	ctrl     *gomock.Controller
	recorder *MockJiraIssueCreatorMockRecorder
}

// MockJiraIssueCreatorMockRecorder is the mock recorder for MockJiraIssueCreator.
type MockJiraIssueCreatorMockRecorder struct {
	mock *MockJiraIssueCreator
}

// NewMockJiraIssueCreator creates a new mock instance.
func NewMockJiraIssueCreator(ctrl *gomock.Controller) *MockJiraIssueCreator {
	mock := &MockJiraIssueCreator{ctrl: ctrl}
	mock.recorder = &MockJiraIssueCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJiraIssueCreator) EXPECT() *MockJiraIssueCreatorMockRecorder {
	return m.recorder
}

// CreateJiraIssue mocks base method.
func (m *MockJiraIssueCreator) CreateJiraIssue(key, summary, description, issuetype, jiraURL, jiraEmail, apiToken string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateJiraIssue", key, summary, description, issuetype, jiraURL, jiraEmail, apiToken)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateJiraIssue indicates an expected call of CreateJiraIssue.
func (mr *MockJiraIssueCreatorMockRecorder) CreateJiraIssue(key, summary, description, issuetype, jiraURL, jiraEmail, apiToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateJiraIssue", reflect.TypeOf((*MockJiraIssueCreator)(nil).CreateJiraIssue), key, summary, description, issuetype, jiraURL, jiraEmail, apiToken)
}
